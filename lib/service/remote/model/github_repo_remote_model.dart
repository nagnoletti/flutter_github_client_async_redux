///
/// github_repo_remote_model.dart
/// ...
///

class GithubRepoRemoteModel {
  late final int? id;
  late final String? nodeId;
  late final String? name;
  late final String? fullName;
  late final bool? private;
  late final dynamic owner; // todo
  late final String? htmlUrl;
  late final String? description;
  late final bool? fork;
  late final String? url;
  late final String? forksUrl;
  late final String? keysUrl;
  late final String? collaboratorsUrl;
  late final String? teamsUrl;
  late final String? hooksUrl;
  late final String? issueEventsUrl;
  late final String? eventsUrl;
  late final String? assigneesUrl;
  late final String? branchesUrl;
  late final String? tagsUrl;
  late final String? blobsUrl;
  late final String? gitTagsUrl;
  late final String? gitRefsUrl;
  late final String? treesUrl;
  late final String? statusesUrl;
  late final String? languagesUrl;
  late final String? stargazersUrl;
  late final String? contributorsUrl;
  late final String? subscribersUrl;
  late final String? subscriptionUrl;
  late final String? commentsUrl;
  late final String? issueCommentUrl;
  late final String? contentsUrl;
  late final String? compareUrl;
  late final String? mergesUrl;
  late final String? archiveUrl;
  late final String? downloadsUrl;
  late final String? issuesUrl;
  late final String? pullsUrl;
  late final String? milestonesUrl;
  late final String? notificationsUrl;
  late final String? labelsUrl;
  late final String? releasesUrl;
  late final String? deploymentsUrl;
  late final String? createdAt;
  late final String? updatedAt;
  late final String? pushedAt;
  late final String? gitUrl;
  late final String? sshUrl;
  late final String? cloneUrl;
  late final String? svnUrl;
  late final String? homepage;
  late final int? size;
  late final int? stargazersCount;
  late final int? watchersCount;
  late final String? language;
  late final bool? hasIssues;
  late final bool? hasProjects;
  late final bool? hasDownloads;
  late final bool? hasWiki;
  late final bool? hasPages;
  late final int? forksCount;
  late final String? mirrorUrl;
  late final bool? archived;
  late final bool? disabled;
  late final int? openIssuesCount;
  late final dynamic license; // todo
  late final bool? allowForking;
  late final bool? isTemplate;
  late final dynamic topics; // todo
  late final String? visibility;
  late final int? forks;
  late final int? openIssues;
  late final int? watchers;
  late final String? defaultBranch;
  late final double? score;

  GithubRepoRemoteModel.fromJson(Map<String, dynamic> json) {
    id = json["id"];
    nodeId = json["node_id"];
    name = json["name"];
    fullName = json["full_name"];
    private = json["private"];
    owner = json["owner"];
    htmlUrl = json["html_url"];
    description = json["description"];
    fork = json["fork"];
    url = json["url"];
    forksUrl = json["forks_url"];
    keysUrl = json["keys_url"];
    collaboratorsUrl = json["collaborators_url"];
    teamsUrl = json["teams_url"];
    hooksUrl = json["hooks_url"];
    issueEventsUrl = json["issue_events_url"];
    eventsUrl = json["events_url"];
    assigneesUrl = json["assignees_url"];
    branchesUrl = json["branches_url"];
    tagsUrl = json["tags_url"];
    blobsUrl = json["blobs_url"];
    gitTagsUrl = json["git_tags_url"];
    gitRefsUrl = json["git_refs_url"];
    treesUrl = json["trees_url"];
    statusesUrl = json["statuses_url"];
    languagesUrl = json["languages_url"];
    stargazersUrl = json["stargazers_url"];
    contributorsUrl = json["contributors_url"];
    subscribersUrl = json["subscribers_url"];
    subscriptionUrl = json["subscription_url"];
    commentsUrl = json["comments_url"];
    issueCommentUrl = json["issue_comment_url"];
    contentsUrl = json["contents_url"];
    compareUrl = json["compare_url"];
    mergesUrl = json["merges_url"];
    archiveUrl = json["archive_url"];
    downloadsUrl = json["downloads_url"];
    issuesUrl = json["issues_url"];
    pullsUrl = json["pulls_url"];
    milestonesUrl = json["milestones_url"];
    notificationsUrl = json["notifications_url"];
    labelsUrl = json["labels_url"];
    releasesUrl = json["releases_url"];
    deploymentsUrl = json["deployments_url"];
    createdAt = json["created_at"];
    updatedAt = json["updated_at"];
    pushedAt = json["pushed_at"];
    gitUrl = json["git_url"];
    sshUrl = json["ssh_url"];
    cloneUrl = json["clone_url"];
    svnUrl = json["svn_url"];
    homepage = json["homepage"];
    size = json["size"];
    stargazersCount = json["stargazers_count"];
    watchersCount = json["watchers_count"];
    language = json["language"];
    hasIssues = json["has_issues"];
    hasProjects = json["has_projects"];
    hasDownloads = json["has_downloads"];
    hasWiki = json["has_wiki"];
    hasPages = json["has_pages"];
    forksCount = json["forks_count"];
    mirrorUrl = json["mirror_url"];
    archived = json["archived"];
    disabled = json["disabled"];
    openIssuesCount = json["open_issues_count"];
    license = json["license"];
    allowForking = json["allow_forking"];
    isTemplate = json["is_template"];
    topics = json["topics"];
    visibility = json["visibility"];
    forks = json["forks"];
    openIssues = json["open_issues"];
    watchers = json["watchers"];
    defaultBranch = json["default_branch"];
    score = json["score"];
  }
}
